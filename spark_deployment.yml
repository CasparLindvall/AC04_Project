- hosts: all
  tasks:
   - name: Generate hosts file
     lineinfile: dest=/etc/hosts
                 regexp='.*{{ item }}$'
                 line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}"
                 state=present            
     when: hostvars[item].ansible_default_ipv4.address is defined
     with_items: "{{groups['all']}}"
 
   - name: Include variables
     include_vars: setup_var.yml 
      
   - name: Set hostname
     hostname: name="{{inventory_hostname}}"


- hosts: sparkmaster
  
  vars_files:
   - setup_var.yml  

  tasks: 
   - name: adding paths
     lineinfile: dest={{rc_file}} line='export JUPYTER_CONFIG_DIR={{jupyter_config_dir}}\n export JUPYTER_PATH={{jupyter_path}}\nexport JUPYTER_RUNTIME_DIR={{jupyter_runtime_dir}}' insertafter='EOF' regexp='export JUPYTER_PATH' state=present

   - name: source bashrc   
     shell: . {{rc_file}}  
   
   - name: start jupyter
     shell: runuser -l ubuntu -c 'jupyter notebook --ip=0.0.0.0 --port=60060 &'
     async: 2592000               # 60*60*24*30  1 month
     args:
      executable: /bin/bash 
   
   - name: jupyter server token
     shell: cat /home/ubuntu/.local/share/jupyter/runtime/*.json | grep token
     register: token

   - debug:
      var: token.stdout_lines

   - name: start spark master process
     shell: nohup {{spark_home}}/sbin/start-master.sh  &

- hosts: sparkworker
    
  vars_files:
   - setup_var.yml

  tasks:
   - name: start spark worker process
     shell: nohup {{spark_home}}/sbin/start-slave.sh spark://sparkmaster:7077 &

- hosts: configNode
  tasks:

   - debug: var=hostvars['sparkmaster']['token'].stdout_lines
     when: hostvars['sparkmaster']['token'].stdout_lines is defined

   - name: write token
     shell: echo {{ hostvars['sparkmaster']['token'].stdout_lines }} > token.txt

#     with_items:
#      - '{{"\w*token: \w*" *}}'
#     shell: echo "{{ hostvars['sparkmaster']['token'] }}" | grep -oh '"\w*token: w*\" *' > token.txt
