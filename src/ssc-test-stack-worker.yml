#################
# A comprehensive implementation of injecting public keys is available on following URL:
#
#https://github.com/openstack/heat-templates/blob/master/hot/software-config/example-templates/example-ssh-copy-id.yaml
#################


heat_template_version: 2013-05-23

description: Simple template to deploy a single compute instance

# Declare parameters
parameters:

  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: 5e963610-1bee-49a6-afb6-fe8463acf122

  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: ACCHT18.normal

  key:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: ACC4-key

  public_network:
    type: string
    label: Public network name or ID
    description: Public network with floating IP addresses.
    #default: SNIC 2018/10-30 Internal IPv4 Network
    default: 06b148ad-bfe4-41ac-8137-56b2363bfbe6

# Resource allocation
resources:
  cluster_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: cluster_sg
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  private_network:
    type: OS::Neutron::Net

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_network }
      cidr: 10.10.10.0/24
      dns_nameservers:
        - 130.238.164.6
        - 130.238.4.133
        - 130.238.7.10
        - 130.239.1.90
        - 129.16.1.53
  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  router-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet }

  instance_port0:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_network }
      security_groups:
        - { get_resource: cluster_sg }
  instance_port1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_network }
      security_groups:
        - { get_resource: cluster_sg }

  my_instance0:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      #security_groups:
      #  - { get_resource: cluster_sg }
      networks:
        - port: { get_resource: instance_port0 }
      user_data: |
        #!/bin/sh
        echo "Hello, World!"
        echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQClSMRAYw2siaepA2NxZ4NdF87++WG2wrWPDt1JpYuQjXMEqKa4imglOCHNf5YBhWfhsDDVLxt3JxnnwCTovlBL3HMWRfzi+ZY1h/HLOWIkalzyHk9vVB9gmyKm0+YahEpFRcL9+bom+ftA0TPkEhKDAHGx4WQlYsMIXkvQjPYErDR8ELZfYWSbQdCT9H+i7Bfn2710ze3MCB4V7zW4X6M3iVOLZ/OYzmLklSLuIdENU9BlZoi8WsgwhL73RWllWdvjW+rPiqItGP/IEJMS8NjtRJq9Gv52cDgz0KZOTqOsi4ZuqD0nDbaWqV3dyixBZUgxbbFbUCJhIb root@acc4st-server" >> /home/ubuntssh/authorzed_keys
        apt-add-repository -y ppa:ansible/ansible
        apt-get update -y
        apt-get upgrade -y
        apt-get install -y ansible
      user_data_format: RAW



  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network }

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: instance_port0 }

# Output in case of successful booting
outputs:
  instance_name:
    description: Name of the instance
    value: { get_attr: [my_instance0, name] }
  instance_ip:
    description: IP address of the instance
    value: { get_attr: [my_instance0, first_address, floating_ip, floating_ip_address] }
